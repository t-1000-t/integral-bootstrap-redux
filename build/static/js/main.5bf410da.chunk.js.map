{"version":3,"sources":["components/App/App.module.css","redux/Actions/NavIsShowAction/index.jsx","redux/Actions/NavIsShowAction/NavIsShowAction.js","redux/Actions/dropDownAboutUsAction/index.jsx","redux/Actions/dropDownAboutUsAction/dropDownAboutUsAction.js","components/middleware/closeDropdown.js","components/middleware/showDropdown.js","routes/routes.jsx","routes/index.jsx","components/middleware/RightList/closeRightList.js","components/Page/MainBoots/RightList/RightList.jsx","components/middleware/RightList/showRightList.js","components/Page/MainBoots/Dropright/index.jsx","components/Page/MainBoots/Dropright/Dropright.jsx","components/Page/NavigationBoots/NavigationBoots.jsx","components/Page/NavigationBoots/index.jsx","components/App/App.jsx","components/App/index.jsx","redux/Reducers/NavIsShowCatalogReducer/index.jsx","redux/Reducers/NavIsShowCatalogReducer/NavIsShowCatalogReducer.js","redux/Reducers/dropDownAboutUsReducer/index.jsx","redux/Reducers/dropDownAboutUsReducer/dropDownAboutUsReducer.js","redux/store.js","index.js"],"names":["module","exports","NavIsShowAction","NavIsShowFalse","type","payload","isNavShow","NavIsShowToggle","value","dropDownAboutUsAction","showAboutUs","isShowAboutUs","closeDropdown","document","getElementById","classList","remove","showDropdown","add","HOME","MAIN","CONTACT","PRODUCT","PRODUCT_CODE","PRODUCTS","FILTERDB","routes","closeRightList","id","x","RightList","this","props","idRL","list","toggleDropdown","className","map","item","key","shortid","generate","to","category_number","onClick","name","width","height","viewBox","fill","xmlns","d","Component","showRightList","contains","Dropright","category","data-toggle","aria-haspopup","aria-expanded","NavigationBoots","state","query","handleKeyPress","e","code","handleChange","setState","target","_isMounted","window","addEventListener","prevProps","prevState","snapshot","isNavCatShow","removeEventListener","href","fillRule","role","aria-labelledby","categ_list","elem","placeholder","aria-label","onChange","data-target","aria-controls","connect","dispatch","NavIsShowActions","App","stylish","NavIsShowCatalogReducer","action","dropDownAboutUsReducer","rootReducer","combineReducers","store","createStore","console","log","getState","ReactDOM","render"],"mappings":"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","file":"static/js/main.5bf410da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3S-ll\",\"AppHeader\":\"App_AppHeader__PKM2c\",\"AppLink\":\"App_AppLink__3THS_\",\"AppLogoSpin\":\"App_AppLogoSpin__1Q4Ux\"};","import NavIsShowAction from \"./NavIsShowAction\";\r\n\r\nexport default NavIsShowAction;","const NavIsShowFalse = () => {\r\n    return {\r\n        type: \"NAV_ACTION_SHOW_FALSE\",\r\n        payload: {\r\n            isNavShow: false,\r\n        }\r\n    }\r\n};\r\n\r\nconst NavIsShowToggle = (value) => {\r\n    return {\r\n        type: \"NAV_ACTION_SHOW_TOGGLE\",\r\n        payload: {\r\n            isNavShow: !value,\r\n        }\r\n    }\r\n};\r\n\r\nexport default {NavIsShowFalse, NavIsShowToggle};","import dropDownAboutUsAction from \"./dropDownAboutUsAction\";\r\n\r\nexport default dropDownAboutUsAction;","const showAboutUs = (value) => {\r\n    return {\r\n        type: \"DROP_DOWN_ABOUT_US\",\r\n        payload: {\r\n            isShowAboutUs: !value,\r\n        }\r\n    }\r\n};\r\n\r\nexport default {showAboutUs};","const closeDropdown = () => {\r\n    const x = document.getElementById(\"closeDropdownShow\");\r\n    x.classList.remove(\"show\");\r\n    const y = document.getElementById(\"menuDropdownShow\");\r\n    y.classList.remove(\"show\");\r\n};\r\n\r\nexport default closeDropdown;","\r\nconst showDropdown = () => {\r\n    const x = document.getElementById(\"closeDropdownShow\");\r\n    x.classList.add(\"show\");\r\n    const y = document.getElementById(\"menuDropdownShow\");\r\n    y.classList.add(\"show\");\r\n};\r\n\r\nexport default showDropdown;","export default {\r\n  HOME: \"/\",\r\n  MAIN: \"/main\",\r\n  CONTACT: \"/contact\",\r\n  PRODUCT: \"/product\",\r\n  PRODUCT_CODE: \"/product/product_code\",\r\n  PRODUCTS: \"/products\",\r\n  FILTERDB: \"/filterdb\",\r\n  //   PRODUCTS_DETAILS: \"/products/:someone\"\r\n};\r\n","import routes from \"./routes\";\r\n\r\nexport default routes;","\r\nconst closeRightList = (id) => {\r\n    const x = document.getElementById(`${id}`);\r\n    if (x === null) {\r\n        return\r\n    }\r\n    x.classList.remove(\"show\");\r\n};\r\n\r\nexport default  closeRightList;","import React, {Component} from 'react';\r\nimport routes from \"../../../../routes\";\r\nimport closeRightList from \"../../../middleware/RightList/closeRightList\";\r\nimport shortid from \"shortid\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass RightList extends Component {\r\n    render() {\r\n        const {idRL, list, toggleDropdown} = this.props;\r\n        return (\r\n            <>\r\n                <div id={idRL} className=\"dropdown-menu\">\r\n                    {list.map(item => (\r\n                        <NavLink key={shortid.generate()} to={`${routes.PRODUCTS}/${item.category_number}`}>\r\n                            <div onClick={toggleDropdown} className=\"dropdown-item\"\r\n                            >{item.name}</div>\r\n                        </NavLink>\r\n                    ))}\r\n                    <button onClick={() => closeRightList(idRL)} className=\"dropdown-item text-muted\">Закрыть <svg\r\n                        width=\"1em\"\r\n                        height=\"1em\"\r\n                        viewBox=\"0 0 16 16\"\r\n                        className=\"bi bi-caret-up-fill text-success\"\r\n                        fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M7.247 4.86l-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\"/>\r\n                    </svg></button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RightList;","const showRightList = (id) => {\r\n\r\n    const x = document.getElementById(`${id}`);\r\n    if (x.classList.contains(\"show\")) {\r\n        x.classList.remove(\"show\");\r\n        return\r\n    }\r\n    x.classList.add(\"show\");\r\n\r\n};\r\n\r\nexport default showRightList;","import Dropright from \"./Dropright\";\r\n\r\nexport default Dropright;","import React from \"react\";\r\nimport RightList from \"../RightList/RightList\";\r\nimport shortid from \"shortid\";\r\nimport showRightList from \"../../../middleware/RightList/showRightList\";\r\n\r\nconst Dropright = ({id, category, list, toggleDropdown}) => (\r\n    <div key={shortid.generate()} className=\"dropright \">\r\n        <button onClick={() => showRightList(id)} type=\"button\" className=\"btn dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                aria-expanded=\"false\">\r\n            {category}\r\n        </button>\r\n        <RightList idRL={id} list={list} toggleDropdown={toggleDropdown}/>\r\n    </div>\r\n);\r\n\r\nexport default Dropright;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport NavIsShowActions from \"../../../redux/Actions/NavIsShowAction\";\r\nimport dropDownAboutUsAction from \"../../../redux/Actions/dropDownAboutUsAction\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport closeDropdown from \"../../middleware/closeDropdown\";\r\nimport showDropdown from \"../../middleware/showDropdown\";\r\nimport Dropright from \"../MainBoots/Dropright\";\r\nimport shortid from \"shortid\";\r\nimport categ_list from \"../../services/categ_list\";\r\nimport routes from \"../../../routes/routes\";\r\n\r\n\r\nclass NavigationBoots extends Component {\r\n\r\n\r\n    state = {\r\n        query: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        window.addEventListener(\"keydown\", this.handleKeyPress);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.isNavCatShow !== this.props.isNavCatShow && this.props.isNavCatShow === false) {\r\n            // уберает стили класов в bootstrap\r\n            closeDropdown();\r\n        }\r\n        if (this.props.isNavCatShow === true) {\r\n            showDropdown();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n        window.removeEventListener(\"keydown\", this.handleKeyPress);\r\n    }\r\n\r\n    // Escape or click another place, close dropDown\r\n    handleKeyPress = (e) => {\r\n        if (e.code !== \"Escape\") {\r\n            return;\r\n        }\r\n        // меняет стейт isNavShow на false\r\n        this.props.NavIsShowFalse();\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            query: e.target.value,\r\n        });\r\n    };\r\n\r\n    // Open or Close category\r\n\r\n\r\n    render() {\r\n        const {isNavCatShow, isShowAboutUs, NavIsShowToggle, NavIsShowFalse, showAboutUs } = this.props;\r\n        const {query} = this.state;\r\n        return (\r\n            <header>\r\n                <div>\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <div className=\"container d-flex\">\r\n                            <a href=\"/#\" className=\"navbar-brand d-flex align-items-center\">\r\n                                <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 19 12\" className=\"bi bi-laptop\"\r\n                                     fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fillRule=\"evenodd\"\r\n                                          d=\"M13.5 3h-11a.5.5 0 0 0-.5.5V11h12V3.5a.5.5 0 0 0-.5-.5zm-11-1A1.5 1.5 0 0 0 1 3.5V12h14V3.5A1.5 1.5 0 0 0 13.5 2h-11z\"/>\r\n                                    <path d=\"M0 12h16v.5a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5V12z\"/>\r\n                                </svg>\r\n                                <strong>Integral</strong>\r\n                            </a>\r\n                            <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                                <ul className=\"navbar-nav\">\r\n                                    <li id=\"closeDropdownShow\"\r\n                                        className=\"nav-item dropdown active\">\r\n                                        <a href=\"/#\" onClick={NavIsShowToggle} className=\"nav-link dropdown-toggle\"\r\n                                           id=\"navbarDropdownMenuLink\"\r\n                                           role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"false\"\r\n                                           aria-expanded={isNavCatShow ? \"true\" : \"false\"}>\r\n                                            Каталог товаров\r\n                                        </a>\r\n                                        <div id=\"menuDropdownShow\" className=\"dropdown-menu row\"\r\n                                             aria-labelledby=\"navbarDropdownMenuLink\">\r\n                                            {categ_list.category.map(elem => (\r\n                                                <Dropright key={shortid.generate()} id={shortid.generate()}\r\n                                                           category={elem.category} list={elem.list} />\r\n                                            ))}\r\n                                            <button onClick={NavIsShowFalse} className=\"dropdown-item text-muted\"\r\n                                                    href=\"/#\">Закрыть <svg width=\"1em\"\r\n                                                                           height=\"1em\"\r\n                                                                           viewBox=\"0 0 16 16\"\r\n                                                                           className=\"bi bi-caret-up-fill text-success\"\r\n                                                                           fill=\"currentColor\"\r\n                                                                           xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path\r\n                                                    d=\"M7.247 4.86l-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\"/>\r\n                                            </svg></button>\r\n\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <form className=\"form-inline mt-0 mt-md-0 ml-sm-2 mr-sm-4\">\r\n                                <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Поиск...\"\r\n                                       aria-label=\"Поиск...\" value={query} onChange={this.handleChange}/>\r\n                            </form>\r\n\r\n                            <button onClick={() => showAboutUs(isShowAboutUs)} type=\"button\" className=\"btn-sm\"\r\n                                    data-toggle=\"collapse\"\r\n                                    data-target=\"#navbarHeader\"\r\n                                    aria-controls=\"navbarHeader\" aria-expanded=\"true\" aria-label=\"Toggle navigation\">\r\n                                <span className=\"navbar-toggler-icon\"></span>\r\n                            </button>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n\r\n                {isShowAboutUs && <div className=\"bg-dark collapse show\" id=\"navbarHeader\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-8 col-md-7 py-4\">\r\n                                <h4 className=\"text-white\">О нас</h4>\r\n                                <p className=\"text-muted\">Add some information about the album below, the author, or any\r\n                                    other\r\n                                    background context. Make it a few sentences long so folks can pick up some\r\n                                    informative\r\n                                    tidbits. Then, link them off to some social networking sites or contact\r\n                                    information.</p>\r\n                            </div>\r\n                            <div className=\"col-sm-4 offset-md-1 py-4\">\r\n\r\n                                <h4 className=\"text-white\">Контакты</h4>\r\n\r\n                                <ul className=\"list-unstyled\">\r\n                                    <NavLink to={`${routes.CONTACT}`} className=\"text-white\">\r\n                                       <li>contact page</li>\r\n                                    </NavLink>\r\n                                    <li><a href=\"/#\" className=\"text-white\">Like on Facebook</a></li>\r\n                                    <li><a href=\"/#\" className=\"text-white\">Email</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isNavCatShow: state.isNavCatShow,\r\n        isShowAboutUs: state.isShowAboutUs,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        NavIsShowToggle: (isNavShow) => dispatch(NavIsShowActions.NavIsShowToggle(isNavShow)),\r\n        NavIsShowFalse: () => dispatch(NavIsShowActions.NavIsShowFalse()),\r\n        showAboutUs: (isShowAboutUs) => dispatch(dropDownAboutUsAction.showAboutUs(isShowAboutUs))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBoots);","import NavigationBoots from \"./NavigationBoots\";\r\n\r\nexport default NavigationBoots;","import React from \"react\";\nimport {BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport stylish from \"./App.module.css\";\nimport NavigationBoots from \"../Page/NavigationBoots\";\n\nfunction App() {\n    return (\n        <div className={stylish.App}>\n            <BrowserRouter>\n                {/*<header className={stylish.AppHeader}>!!!!!!!!!!!!!!!!!!!!!!!</header>*/}\n                <NavigationBoots/>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import App from \"./App\";\r\n\r\nexport default App;","import NavIsShowCatalogReducer from \"./NavIsShowCatalogReducer\";\r\n\r\nexport default NavIsShowCatalogReducer;","const NavIsShowCatalogReducer = (state = false, action) => {\r\nswitch (action.type) {\r\n    case \"NAV_ACTION_SHOW_FALSE\":\r\n        return state = false;\r\n    case \"NAV_ACTION_SHOW_TOGGLE\":\r\n        return state = !state;\r\n    default:\r\n        return state;\r\n}\r\n};\r\n\r\nexport default NavIsShowCatalogReducer;","import dropDownAboutUsReducer from \"./dropDownAboutUsReducer\"\r\n\r\nexport default dropDownAboutUsReducer;","const dropDownAboutUsReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case \"DROP_DOWN_ABOUT_US\":\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dropDownAboutUsReducer;","import { createStore, combineReducers } from 'redux';\r\nimport NavIsShowCatalogReducer from \"./Reducers/NavIsShowCatalogReducer\";\r\nimport dropDownAboutUsReducer from \"./Reducers/dropDownAboutUsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    isNavCatShow: NavIsShowCatalogReducer,\r\n    isShowAboutUs: dropDownAboutUsReducer,\r\n\r\n});\r\n\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nconsole.log(store.getState());\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}